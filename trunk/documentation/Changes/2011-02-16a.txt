Revision: 1608
          http://projects.blender.org/scm/viewvc.php?view=rev&root=bf-extensions&revision=1608
Author:   campbellbarton
Date:     2011-02-16 02:26:15 +0000 (Wed, 16 Feb 2011)
Log Message:
-----------
pep8 style warning corrections.

Modified Paths:
--------------
    trunk/py/scripts/addons/io_mesh_ply/__init__.py
    trunk/py/scripts/addons/io_mesh_stl/__init__.py
    trunk/py/scripts/addons/io_scene_fbx/export_fbx.py
    trunk/py/scripts/addons/render_povray/__init__.py
    trunk/py/scripts/addons/render_povray/render.py
    trunk/py/scripts/addons/render_povray/ui.py

Modified: trunk/py/scripts/addons/io_mesh_ply/__init__.py
===================================================================
--- trunk/py/scripts/addons/io_mesh_ply/__init__.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/io_mesh_ply/__init__.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -49,7 +49,7 @@
     '''Load a PLY geometry file'''
     bl_idname = "import_mesh.ply"
     bl_label = "Import PLY"
-    
+
     files = CollectionProperty(name="File Path",
                           description="File path used for importing "
                                       "the PLY file",

Modified: trunk/py/scripts/addons/io_mesh_stl/__init__.py
===================================================================
--- trunk/py/scripts/addons/io_mesh_stl/__init__.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/io_mesh_stl/__init__.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -71,7 +71,7 @@
     bl_label = "Import STL"
 
     filename_ext = ".stl"
-    
+
     filter_glob = StringProperty(default="*.stl", options={'HIDDEN'})
 
     files = CollectionProperty(name="File Path",

Modified: trunk/py/scripts/addons/io_scene_fbx/export_fbx.py
===================================================================
--- trunk/py/scripts/addons/io_scene_fbx/export_fbx.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/io_scene_fbx/export_fbx.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -448,7 +448,7 @@
 
         def getPoseBone(self):
             return self.__pose_bone
-        
+
         # get pose from frame.
         def getPoseMatrix(self, f):  # ----------------------------------------------
             return self.__anim_poselist[f]

Modified: trunk/py/scripts/addons/render_povray/__init__.py
===================================================================
--- trunk/py/scripts/addons/render_povray/__init__.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/render_povray/__init__.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -104,8 +104,7 @@
             soft_max=1,
             default=(0.001, 0.001, 0.001),
             options={'ANIMATABLE'})
-            
-    
+
     Scene.pov_baking_enable = BoolProperty(
             name="Enable Baking",
             description="Enable POV-Rays texture baking", @@ -186,7 +185,7 @@
     Scene.pov_photon_gather_max = IntProperty(
             name="Gather Max", description="Maximum number of photons gathered for each point",
             min=1, max=256, default=100)
-    
+
     Scene.pov_radio_adc_bailout = FloatProperty(
             name="ADC Bailout", description="The adc_bailout for radiosity rays. Use adc_bailout = 0.01 / brightest_ambient_object for good results",
             min=0.0, max=1000.0, soft_min=0.0, soft_max=1.0, default=0.01, precision=3) @@ -282,7 +281,6 @@
             description="This parameter varies the thickness.",
             min=0.0, max=10.0, soft_min=0.000, soft_max=1.0, default=0)
 
-
     Mat.pov_interior_fade_color = FloatVectorProperty(
             name="Fade Color",
             description="Color of filtered attenuation for transparent materials", @@ -334,7 +332,7 @@
             default="1")  # ui.py has to be loaded before render.py with this.
 
     ###########################################################################
-    
+
     Tex = bpy.types.Texture
 
     #Custom texture gamma
@@ -342,14 +340,14 @@
             name="Enable custom texture gamma",
             description="Notify some custom gamma for which texture has been precorrected without the file format carrying it and only if it differs from your OS expected standard (see pov doc)",
             default=False)
-    
+
     Tex.pov_tex_gamma_value = FloatProperty(
             name="Custom texture gamma",
             description="value for which the file was issued e.g. a Raw photo is gamma 1.0",
             min=0.45, max=5.00, soft_min=1.00, soft_max=2.50, default=1.00)
 
     ###########################################################################
-    
+
     Obj = bpy.types.Object
 
     #Importance sampling
@@ -362,10 +360,10 @@
     Obj.pov_collect_photons = BoolProperty(
             name="Receive Photon Caustics",
             description="Enable object to collect photons from other objects caustics. Turn off for objects that don't really need to receive caustics (e.g. objects that generate caustics often don't need to show any on themselves) ",
-            default=True)   
+            default=True)
 
     ###########################################################################
-    
+
     Cam = bpy.types.Camera
 
     #DOF Toggle
@@ -395,7 +393,7 @@
             name="Variance",
             description="Minimum threshold (fractional value) for adaptive DOF sampling (up increases quality and render time). The value for the variance should be in the range of the smallest displayable color difference",
             min=1, max=100000, soft_max=10000, default=256)
-    
+
     Cam.pov_dof_confidence = FloatProperty(
             name="Confidence",
             description="Probability to reach the real color value. Larger confidence values will lead to more samples, slower traces and better images.", @@ -411,9 +409,9 @@
 
     Scene = bpy.types.Scene
     Mat = bpy.types.Material
-    Tex = bpy.types.Texture 
+    Tex = bpy.types.Texture
     Obj = bpy.types.Object
-    Cam = bpy.types.Camera 
+    Cam = bpy.types.Camera
     del Scene.pov_tempfiles_enable  # CR
     del Scene.pov_scene_name  # CR
     del Scene.pov_deletefiles_enable  # CR @@ -441,11 +439,11 @@
     del Scene.pov_media_color  # MR
     del Scene.pov_baking_enable  # MR
     del Scene.pov_max_trace_level  # MR
-    del Scene.pov_photon_spacing # MR
-    del Scene.pov_photon_max_trace_level # MR
-    del Scene.pov_photon_adc_bailout # MR
-    del Scene.pov_photon_gather_min # MR
-    del Scene.pov_photon_gather_max # MR
+    del Scene.pov_photon_spacing  # MR
+    del Scene.pov_photon_max_trace_level  # MR
+    del Scene.pov_photon_adc_bailout  # MR
+    del Scene.pov_photon_gather_min  # MR
+    del Scene.pov_photon_gather_max  # MR
     del Scene.pov_antialias_enable  # CR
     del Scene.pov_antialias_method  # CR
     del Scene.pov_antialias_depth  # CR @@ -464,7 +462,7 @@
     del Mat.pov_irid_amount  # MR
     del Mat.pov_irid_thickness  # MR
     del Mat.pov_irid_turbulence  # MR
-    del Mat.pov_interior_fade_color # MR
+    del Mat.pov_interior_fade_color  # MR
     del Mat.pov_caustics_enable  # MR
     del Mat.pov_fake_caustics  # MR
     del Mat.pov_fake_caustics_power  # MR @@ -475,13 +473,13 @@
     del Tex.pov_tex_gamma_enable  # MR
     del Tex.pov_tex_gamma_value  # MR
     del Obj.pov_importance_value  # MR
-    del Obj.pov_collect_photons # MR
-    del Cam.pov_dof_enable # MR
-    del Cam.pov_dof_aperture # MR
-    del Cam.pov_dof_samples_min # MR
-    del Cam.pov_dof_samples_max # MR
-    del Cam.pov_dof_variance # MR
-    del Cam.pov_dof_confidence # MR
-    
+    del Obj.pov_collect_photons  # MR
+    del Cam.pov_dof_enable  # MR
+    del Cam.pov_dof_aperture  # MR
+    del Cam.pov_dof_samples_min  # MR
+    del Cam.pov_dof_samples_max  # MR
+    del Cam.pov_dof_variance  # MR
+    del Cam.pov_dof_confidence  # MR
+
 if __name__ == "__main__":
     register()

Modified: trunk/py/scripts/addons/render_povray/render.py
===================================================================
--- trunk/py/scripts/addons/render_povray/render.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/render_povray/render.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -44,7 +44,7 @@
     else:
         return path[dotidx:].upper().replace(".", "")
 
-    
+
 def imageFormat(imgF):
     ext = ""
     ext_orig = splitExt(imgF)
@@ -314,7 +314,7 @@
             tabWrite("}\n")
             if not ob.pov_collect_photons:
                 tabWrite("photons{collect off}\n")
-                    
+
             if pov_photons_refraction or pov_photons_reflection:
                 tabWrite("photons{\n")
                 tabWrite("target\n")
@@ -536,7 +536,7 @@
             tabWrite("rotate  <%.6f, %.6f, %.6f>\n" % tuple([degrees(e) for e in matrix.to_3x3().to_euler()]))
             tabWrite("translate <%.6f, %.6f, %.6f>\n" % (matrix[3][0], matrix[3][1], matrix[3][2]))
             if camera.data.pov_dof_enable and focal_point != 0:
-                tabWrite("aperture %.3g\n" % camera.data.pov_dof_aperture) 
+                tabWrite("aperture %.3g\n" % 
+ camera.data.pov_dof_aperture)
                 tabWrite("blur_samples %d %d\n" % (camera.data.pov_dof_samples_min, camera.data.pov_dof_samples_max))
                 tabWrite("variance 1/%d\n" % camera.data.pov_dof_variance)
                 tabWrite("confidence %.3g\n" % camera.data.pov_dof_confidence) @@ -593,7 +593,7 @@
                     tabWrite("adaptive 1\n")
                     tabWrite("jitter\n")
 
-            if not scene.render.use_shadows or lamp.type == 'HEMI' or (lamp.type != 'HEMI' and lamp.shadow_method == 'NOSHADOW'): # HEMI never has any shadow_method attribute
+            if not scene.render.use_shadows or lamp.type == 'HEMI' or 
+ (lamp.type != 'HEMI' and lamp.shadow_method == 'NOSHADOW'):  # HEMI 
+ never has any shadow_method attribute
                 tabWrite("shadowless\n")
 
             if lamp.type not in ('SUN', 'AREA', 'HEMI'):  # Sun shouldn't be attenuated. Hemi and area lights have no falloff attribute so they are put to type 2 attenuation a little higher above.

Modified: trunk/py/scripts/addons/render_povray/ui.py
===================================================================
--- trunk/py/scripts/addons/render_povray/ui.py	2011-02-15 16:39:35 UTC (rev 1607)
+++ trunk/py/scripts/addons/render_povray/ui.py	2011-02-16 02:26:15 UTC (rev 1608)
@@ -189,7 +189,7 @@
             col = split.column()
             col.prop(scene, "pov_indentation_character", text="Indent")
             col = split.column()
-            if scene.pov_indentation_character == "2": 
+            if scene.pov_indentation_character == "2":
                 col.prop(scene, "pov_indentation_spaces", text="Spaces")
             split = layout.split()
             col = split.column()
@@ -212,7 +212,7 @@
 
         split = layout.split()
         col = split.column()
-        
+
         col.label(text="Global Settings")
         col.prop(scene, "pov_max_trace_level", text="Ray Depth")
 
@@ -227,7 +227,7 @@
         col = split.column()
 

@@ Diff output truncated at 10240 characters. @@ _______________________________________________
Bf-extensions-cvs mailing list
Bf-extensions-cvs@blender.org
http://lists.blender.org/mailman/listinfo/bf-extensions-cvs
